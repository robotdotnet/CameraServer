import org.gradle.internal.os.OperatingSystem

plugins {
    id "com.ullink.nuget" version "2.15"
    id "com.ullink.msbuild" version "2.15"
}

allprojects {
    repositories {
        mavenCentral()
    }
}

def buildVersion =  project.version != 'unspecified' ? project.version : '1.0.0'

def packageVersion

def release = project.hasProperty('release')

def buildNum = project.hasProperty('buildNumber') ? project.buildNumber : '0'

if (release) {
    packageVersion = buildVersion
} else {
    packageVersion = buildVersion + '-beta-' + buildNum
}

msbuild {
    projectFile = file("${rootDir}/CameraServer/CameraServer.csproj")

    configuration = "Release"

    // targets to execute (/t:Clean;Rebuild, no default)
    targets = ['Clean', 'Rebuild']
}

assemblyInfoPatcher {
    version = buildVersion + '.' + buildNum
    if (!release) {
        fileVersion = version + '-Beta'
    } else {
        fileVersion = version
    }
}

nugetSpec {
    nuspec = [
        metadata: [
            id: 'FRC.CameraServer',
            title: 'FRC CameraServer',
            authors: 'RobotDotNet',
            owners: 'RobotDotNet',
            description: 'Wrapper around the wpilib cscore library for .NET. Only supports the RoboRIO currently',
            tags: 'WPILib FIRST FRC RoboRIO',
            copyright: '2016-2017',
            projectUrl: 'https://github.com/robotdotnet/CameraServer',
            licenseUrl: 'https://github.com/robotdotnet/CameraServer/LICENSE.txt',
            version: packageVersion
        ],
        files: [
            { file (src: "${rootDir}/CameraServer/bin/Release/CameraServer.dll", target: 'lib')},
            { file (src: "${rootDir}/CameraServer/bin/Release/CameraServer.xml", target: 'lib')},
            { file (src: "${rootDir}/CameraServer/OpenCvSharp.dll", target: 'lib')}
        ]
    ]
}

// Empty task for build so that zips will be
// built when running ./gradlew build
//task build

build.dependsOn msbuild
nugetPack.dependsOn msbuild
build.dependsOn nugetPack

//apply from: "releases.gradle"

clean {
    delete buildDir
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}
