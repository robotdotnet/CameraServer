using FRC.CameraServer.Interop;
using System;
using System.Collections.Generic;
using System.Text;

namespace FRC.CameraServer
{
    /// <summary>
    /// An event listener for camera events
    /// </summary>
    /// <remarks>
    /// This calls the designated callback when an event matching the specified
    /// mask is generated by the library
    /// </remarks>
    public class VideoListener : IDisposable
    {
        /// <summary>
        /// Creates a new event listener
        /// </summary>
        /// <param name="listener">The callback function</param>
        /// <param name="eventMask">A bitmask of <see cref="EventKind"/> to listen for</param>
        /// <param name="immediateNotify">Whether callback should be called immediately for all requested events</param>
        public VideoListener(VideoEventDelegate listener, EventKind eventMask, bool immediateNotify)
        {
            m_handle = CsCore.AddListener(listener, eventMask, immediateNotify);
        }

        /// <summary>
        /// Disposes of the Listener
        /// </summary>
        public void Dispose()
        {
            if (m_handle.IsValid())
            {
                CsCore.RemoveListener(m_handle);
            }
            m_handle = new CS_Listener(0);
        }

        /// <summary>
        /// Gets if the listener is valid and enabled
        /// </summary>
        public bool IsValid => m_handle.IsValid();

        private CS_Listener m_handle;
    }
}
